###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        09/Oct/2018  16:32:36
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\Libraries\STM32F4xx_StdPeriph_Driver\src\stm32f4xx_dbgmcu.c
#    Command line =  
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\Libraries\STM32F4xx_StdPeriph_Driver\src\stm32f4xx_dbgmcu.c
#        -D IAR_ARM_CM4 -D USE_STDPERIPH_DRIVER -D STM32F40_41xxx -D
#        HAVE_CONFIG_H -D SD_SPI_MODE -D USE_FULL_ASSERT -D DEVICE_2 -D TFT -D
#        STENDBUY_NOT_USE -D SCREEN_NOT_ROTATE -D USE_ADS1292R -D DISPLAY_GPIO
#        -D BUFFERED_TRANSFER -D LCD_TRACE -lCN
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\KP02_DEVICE_2\List\ -o
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\KP02_DEVICE_2\Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4F -e --fpu=VFPv4_sp --dlib_config
#        "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\ -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\FatFs\ -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\FreeRTOS\Source\include\
#        -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\FreeRTOS\Source\portable\IAR\ARM_CM3\
#        -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\Libraries\CMSIS\CM4\CoreSupport\
#        -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\Libraries\CMSIS\CM4\DeviceSupport\STM32F4xx\
#        -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\Libraries\STM32F10x_Speex_Lib\include\speex\
#        -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\Libraries\STM32F10x_Speex_Lib\include\
#        -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\Libraries\STM32F10x_Speex_Lib\libspeex\
#        -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\Libraries\STM32F10x_Speex_Lib\STM32\include\speex\
#        -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\Libraries\STM32F10x_Speex_Lib\STM32\include\
#        -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\Libraries\STM32F10x_Speex_Lib\STM32\
#        -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\Libraries\STM32F10x_Speex_Lib\STM32\libspeex\
#        -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\Libraries\STM32F10x_Speex_Lib\STM32\libspeex\iar\
#        -I D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\Fonts\ -Om --ec++
#    List file    =  
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\KP02_DEVICE_2\List\stm32f4xx_dbgmcu.lst
#    Object file  =  
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\KP02_DEVICE_2\Obj\stm32f4xx_dbgmcu.o
#
###############################################################################

D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\Libraries\STM32F4xx_StdPeriph_Driver\src\stm32f4xx_dbgmcu.c
      1          /**
      2            ******************************************************************************
      3            * @file    stm32f4xx_dbgmcu.c
      4            * @author  MCD Application Team
      5            * @version V1.3.0
      6            * @date    08-November-2013
      7            * @brief   This file provides all the DBGMCU firmware functions.
      8            ******************************************************************************
      9            * @attention
     10            *
     11            * <h2><center>&copy; COPYRIGHT 2013 STMicroelectronics</center></h2>
     12            *
     13            * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
     14            * You may not use this file except in compliance with the License.
     15            * You may obtain a copy of the License at:
     16            *
     17            *        http://www.st.com/software_license_agreement_liberty_v2
     18            *
     19            * Unless required by applicable law or agreed to in writing, software 
     20            * distributed under the License is distributed on an "AS IS" BASIS, 
     21            * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     22            * See the License for the specific language governing permissions and
     23            * limitations under the License.
     24            *
     25            ******************************************************************************
     26            */
     27          
     28          /* Includes ------------------------------------------------------------------*/
     29          #include "stm32f4xx_dbgmcu.h"
     30          
     31          /** @addtogroup STM32F4xx_StdPeriph_Driver
     32            * @{
     33            */
     34          
     35          /** @defgroup DBGMCU 
     36            * @brief DBGMCU driver modules
     37            * @{
     38            */ 
     39          
     40          /* Private typedef -----------------------------------------------------------*/
     41          /* Private define ------------------------------------------------------------*/
     42          #define IDCODE_DEVID_MASK    ((uint32_t)0x00000FFF)
     43          
     44          /* Private macro -------------------------------------------------------------*/
     45          /* Private variables ---------------------------------------------------------*/
     46          /* Private function prototypes -----------------------------------------------*/
     47          /* Private functions ---------------------------------------------------------*/
     48          
     49          /** @defgroup DBGMCU_Private_Functions
     50            * @{
     51            */ 
     52          
     53          /**
     54            * @brief  Returns the device revision identifier.
     55            * @param  None
     56            * @retval Device revision identifier
     57            */

   \                                 In section .text, align 2, keep-with-next
     58          uint32_t DBGMCU_GetREVID(void)
     59          {
     60             return(DBGMCU->IDCODE >> 16);
   \                     DBGMCU_GetREVID: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable5  ;; 0xe0042000
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x0C00             LSRS     R0,R0,#+16
   \   00000006   0x4770             BX       LR               ;; return
     61          }
     62          
     63          /**
     64            * @brief  Returns the device identifier.
     65            * @param  None
     66            * @retval Device identifier
     67            */

   \                                 In section .text, align 2, keep-with-next
     68          uint32_t DBGMCU_GetDEVID(void)
     69          {
     70             return(DBGMCU->IDCODE & IDCODE_DEVID_MASK);
   \                     DBGMCU_GetDEVID: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable5  ;; 0xe0042000
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x0500             LSLS     R0,R0,#+20
   \   00000006   0x0D00             LSRS     R0,R0,#+20
   \   00000008   0x4770             BX       LR               ;; return
     71          }
     72          
     73          /**
     74            * @brief  Configures low power mode behavior when the MCU is in Debug mode.
     75            * @param  DBGMCU_Periph: specifies the low power mode.
     76            *   This parameter can be any combination of the following values:
     77            *     @arg DBGMCU_SLEEP: Keep debugger connection during SLEEP mode              
     78            *     @arg DBGMCU_STOP: Keep debugger connection during STOP mode               
     79            *     @arg DBGMCU_STANDBY: Keep debugger connection during STANDBY mode        
     80            * @param  NewState: new state of the specified low power mode in Debug mode.
     81            *   This parameter can be: ENABLE or DISABLE.
     82            * @retval None
     83            */

   \                                 In section .text, align 2, keep-with-next
     84          void DBGMCU_Config(uint32_t DBGMCU_Periph, FunctionalState NewState)
     85          {
   \                     DBGMCU_Config: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
     86            /* Check the parameters */
     87            assert_param(IS_DBGMCU_PERIPH(DBGMCU_Periph));
   \   00000006   0x08E0             LSRS     R0,R4,#+3
   \   00000008   0x00C0             LSLS     R0,R0,#+3
   \   0000000A   0xD101             BNE.N    ??DBGMCU_Config_0
   \   0000000C   0x2C00             CMP      R4,#+0
   \   0000000E   0xD104             BNE.N    ??DBGMCU_Config_1
   \                     ??DBGMCU_Config_0: (+1)
   \   00000010   0x2157             MOVS     R1,#+87
   \   00000012   0x.... 0x....      ADR.W    R0,?_0
   \   00000016   0x.... 0x....      BL       assert_failed
     88            assert_param(IS_FUNCTIONAL_STATE(NewState));
   \                     ??DBGMCU_Config_1: (+1)
   \   0000001A   0x2D00             CMP      R5,#+0
   \   0000001C   0xD006             BEQ.N    ??DBGMCU_Config_2
   \   0000001E   0x2D01             CMP      R5,#+1
   \   00000020   0xD004             BEQ.N    ??DBGMCU_Config_2
   \   00000022   0x2158             MOVS     R1,#+88
   \   00000024   0x.... 0x....      ADR.W    R0,?_0
   \   00000028   0x.... 0x....      BL       assert_failed
     89            if (NewState != DISABLE)
   \                     ??DBGMCU_Config_2: (+1)
   \   0000002C   0x....             LDR.N    R0,??DataTable5_1  ;; 0xe0042004
   \   0000002E   0x2D00             CMP      R5,#+0
   \   00000030   0x6801             LDR      R1,[R0, #+0]
   \   00000032   0xD002             BEQ.N    ??DBGMCU_Config_3
     90            {
     91              DBGMCU->CR |= DBGMCU_Periph;
   \   00000034   0x4321             ORRS     R1,R4,R1
   \   00000036   0x6001             STR      R1,[R0, #+0]
   \   00000038   0xBD31             POP      {R0,R4,R5,PC}
     92            }
     93            else
     94            {
     95              DBGMCU->CR &= ~DBGMCU_Periph;
   \                     ??DBGMCU_Config_3: (+1)
   \   0000003A   0x43A1             BICS     R1,R1,R4
   \   0000003C   0x6001             STR      R1,[R0, #+0]
     96            }
     97          }
   \   0000003E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     98          
     99          /**
    100            * @brief  Configures APB1 peripheral behavior when the MCU is in Debug mode.
    101            * @param  DBGMCU_Periph: specifies the APB1 peripheral.
    102            *   This parameter can be any combination of the following values:        
    103            *     @arg DBGMCU_TIM2_STOP: TIM2 counter stopped when Core is halted          
    104            *     @arg DBGMCU_TIM3_STOP: TIM3 counter stopped when Core is halted          
    105            *     @arg DBGMCU_TIM4_STOP: TIM4 counter stopped when Core is halted
    106            *     @arg DBGMCU_TIM5_STOP: TIM5 counter stopped when Core is halted          
    107            *     @arg DBGMCU_TIM6_STOP: TIM6 counter stopped when Core is halted          
    108            *     @arg DBGMCU_TIM7_STOP: TIM7 counter stopped when Core is halted
    109            *     @arg DBGMCU_TIM12_STOP: TIM12 counter stopped when Core is halted  
    110            *     @arg DBGMCU_TIM13_STOP: TIM13 counter stopped when Core is halted  
    111            *     @arg DBGMCU_TIM14_STOP: TIM14 counter stopped when Core is halted 
    112            *     @arg DBGMCU_RTC_STOP: RTC Calendar and Wakeup counter stopped when Core is halted.                                                                                
    113            *     @arg DBGMCU_WWDG_STOP: Debug WWDG stopped when Core is halted
    114            *     @arg DBGMCU_IWDG_STOP: Debug IWDG stopped when Core is halted        
    115            *     @arg DBGMCU_I2C1_SMBUS_TIMEOUT: I2C1 SMBUS timeout mode stopped when Core is halted
    116            *     @arg DBGMCU_I2C2_SMBUS_TIMEOUT: I2C2 SMBUS timeout mode stopped when Core is halted
    117            *     @arg DBGMCU_I2C3_SMBUS_TIMEOUT: I2C3 SMBUS timeout mode stopped when Core is halted
    118            *     @arg DBGMCU_CAN2_STOP: Debug CAN1 stopped when Core is halted           
    119            *     @arg DBGMCU_CAN1_STOP: Debug CAN2 stopped when Core is halted        
    120            *   This parameter can be: ENABLE or DISABLE.
    121            * @retval None
    122            */

   \                                 In section .text, align 2, keep-with-next
    123          void DBGMCU_APB1PeriphConfig(uint32_t DBGMCU_Periph, FunctionalState NewState)
    124          {
   \                     DBGMCU_APB1PeriphConfig: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
    125            /* Check the parameters */
    126            assert_param(IS_DBGMCU_APB1PERIPH(DBGMCU_Periph));
   \   00000006   0x....             LDR.N    R0,??DataTable5_2  ;; 0xf91fe200
   \   00000008   0x4204             TST      R4,R0
   \   0000000A   0xD101             BNE.N    ??DBGMCU_APB1PeriphConfig_0
   \   0000000C   0x2C00             CMP      R4,#+0
   \   0000000E   0xD104             BNE.N    ??DBGMCU_APB1PeriphConfig_1
   \                     ??DBGMCU_APB1PeriphConfig_0: (+1)
   \   00000010   0x217E             MOVS     R1,#+126
   \   00000012   0x.... 0x....      ADR.W    R0,?_0
   \   00000016   0x.... 0x....      BL       assert_failed
    127            assert_param(IS_FUNCTIONAL_STATE(NewState));
   \                     ??DBGMCU_APB1PeriphConfig_1: (+1)
   \   0000001A   0x2D00             CMP      R5,#+0
   \   0000001C   0xD006             BEQ.N    ??DBGMCU_APB1PeriphConfig_2
   \   0000001E   0x2D01             CMP      R5,#+1
   \   00000020   0xD004             BEQ.N    ??DBGMCU_APB1PeriphConfig_2
   \   00000022   0x217F             MOVS     R1,#+127
   \   00000024   0x.... 0x....      ADR.W    R0,?_0
   \   00000028   0x.... 0x....      BL       assert_failed
    128          
    129            if (NewState != DISABLE)
   \                     ??DBGMCU_APB1PeriphConfig_2: (+1)
   \   0000002C   0x....             LDR.N    R0,??DataTable5_3  ;; 0xe0042008
   \   0000002E   0x2D00             CMP      R5,#+0
   \   00000030   0x6801             LDR      R1,[R0, #+0]
   \   00000032   0xD002             BEQ.N    ??DBGMCU_APB1PeriphConfig_3
    130            {
    131              DBGMCU->APB1FZ |= DBGMCU_Periph;
   \   00000034   0x4321             ORRS     R1,R4,R1
   \   00000036   0x6001             STR      R1,[R0, #+0]
   \   00000038   0xBD31             POP      {R0,R4,R5,PC}
    132            }
    133            else
    134            {
    135              DBGMCU->APB1FZ &= ~DBGMCU_Periph;
   \                     ??DBGMCU_APB1PeriphConfig_3: (+1)
   \   0000003A   0x43A1             BICS     R1,R1,R4
   \   0000003C   0x6001             STR      R1,[R0, #+0]
    136            }
    137          }
   \   0000003E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    138          
    139          /**
    140            * @brief  Configures APB2 peripheral behavior when the MCU is in Debug mode.
    141            * @param  DBGMCU_Periph: specifies the APB2 peripheral.
    142            *   This parameter can be any combination of the following values:       
    143            *     @arg DBGMCU_TIM1_STOP: TIM1 counter stopped when Core is halted                
    144            *     @arg DBGMCU_TIM8_STOP: TIM8 counter stopped when Core is halted
    145            *     @arg DBGMCU_TIM9_STOP: TIM9 counter stopped when Core is halted   
    146            *     @arg DBGMCU_TIM10_STOP: TIM10 counter stopped when Core is halted   
    147            *     @arg DBGMCU_TIM11_STOP: TIM11 counter stopped when Core is halted                                                                                  
    148            * @param  NewState: new state of the specified peripheral in Debug mode.
    149            *   This parameter can be: ENABLE or DISABLE.
    150            * @retval None
    151            */

   \                                 In section .text, align 2, keep-with-next
    152          void DBGMCU_APB2PeriphConfig(uint32_t DBGMCU_Periph, FunctionalState NewState)
    153          {
   \                     DBGMCU_APB2PeriphConfig: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
    154            /* Check the parameters */
    155            assert_param(IS_DBGMCU_APB2PERIPH(DBGMCU_Periph));
   \   00000006   0x....             LDR.N    R0,??DataTable5_4  ;; 0xfff8fffc
   \   00000008   0x4204             TST      R4,R0
   \   0000000A   0xD101             BNE.N    ??DBGMCU_APB2PeriphConfig_0
   \   0000000C   0x2C00             CMP      R4,#+0
   \   0000000E   0xD104             BNE.N    ??DBGMCU_APB2PeriphConfig_1
   \                     ??DBGMCU_APB2PeriphConfig_0: (+1)
   \   00000010   0x219B             MOVS     R1,#+155
   \   00000012   0x.... 0x....      ADR.W    R0,?_0
   \   00000016   0x.... 0x....      BL       assert_failed
    156            assert_param(IS_FUNCTIONAL_STATE(NewState));
   \                     ??DBGMCU_APB2PeriphConfig_1: (+1)
   \   0000001A   0x2D00             CMP      R5,#+0
   \   0000001C   0xD006             BEQ.N    ??DBGMCU_APB2PeriphConfig_2
   \   0000001E   0x2D01             CMP      R5,#+1
   \   00000020   0xD004             BEQ.N    ??DBGMCU_APB2PeriphConfig_2
   \   00000022   0x219C             MOVS     R1,#+156
   \   00000024   0x.... 0x....      ADR.W    R0,?_0
   \   00000028   0x.... 0x....      BL       assert_failed
    157          
    158            if (NewState != DISABLE)
   \                     ??DBGMCU_APB2PeriphConfig_2: (+1)
   \   0000002C   0x....             LDR.N    R0,??DataTable5_5  ;; 0xe004200c
   \   0000002E   0x2D00             CMP      R5,#+0
   \   00000030   0x6801             LDR      R1,[R0, #+0]
   \   00000032   0xD002             BEQ.N    ??DBGMCU_APB2PeriphConfig_3
    159            {
    160              DBGMCU->APB2FZ |= DBGMCU_Periph;
   \   00000034   0x4321             ORRS     R1,R4,R1
   \   00000036   0x6001             STR      R1,[R0, #+0]
   \   00000038   0xBD31             POP      {R0,R4,R5,PC}
    161            }
    162            else
    163            {
    164              DBGMCU->APB2FZ &= ~DBGMCU_Periph;
   \                     ??DBGMCU_APB2PeriphConfig_3: (+1)
   \   0000003A   0x43A1             BICS     R1,R1,R4
   \   0000003C   0x6001             STR      R1,[R0, #+0]
    165            }
    166          }
   \   0000003E   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0xE0042000         DC32     0xe0042000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0xE0042004         DC32     0xe0042004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0xF91FE200         DC32     0xf91fe200

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0xE0042008         DC32     0xe0042008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0xFFF8FFFC         DC32     0xfff8fffc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0xE004200C         DC32     0xe004200c

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x44 0x3A          DC8 44H, 3AH, 5CH, 57H, 4FH, 52H, 4BH, 5CH
   \              0x5C 0x57    
   \              0x4F 0x52    
   \              0x4B 0x5C    
   \   00000008   0x46 0x69          DC8 46H, 69H, 72H, 6DH, 77H, 61H, 72H, 65H
   \              0x72 0x6D    
   \              0x77 0x61    
   \              0x72 0x65    
   \   00000010   0x5F 0x4C          DC8 5FH, 4CH, 61H, 73H, 74H, 52H, 65H, 6CH
   \              0x61 0x73    
   \              0x74 0x52    
   \              0x65 0x6C    
   \   00000018   0x65 0x61          DC8 65H, 61H, 73H, 65H, 5CH, 5FH, 37H, 2EH
   \              0x73 0x65    
   \              0x5C 0x5F    
   \              0x37 0x2E    
   \   00000020   0x30 0x2E          DC8 30H, 2EH, 39H, 35H, 5CH, 4DH, 61H, 69H
   \              0x39 0x35    
   \              0x5C 0x4D    
   \              0x61 0x69    
   \   00000028   0x6E 0x4D          DC8 6EH, 4DH, 43H, 55H, 5CH, 4CH, 69H, 62H
   \              0x43 0x55    
   \              0x5C 0x4C    
   \              0x69 0x62    
   \   00000030   0x72 0x61          DC8 72H, 61H, 72H, 69H, 65H, 73H, 5CH, 53H
   \              0x72 0x69    
   \              0x65 0x73    
   \              0x5C 0x53    
   \   00000038   0x54 0x4D          DC8 54H, 4DH, 33H, 32H, 46H, 34H, 78H, 78H
   \              0x33 0x32    
   \              0x46 0x34    
   \              0x78 0x78    
   \   00000040   0x5F 0x53          DC8 5FH, 53H, 74H, 64H, 50H, 65H, 72H, 69H
   \              0x74 0x64    
   \              0x50 0x65    
   \              0x72 0x69    
   \   00000048   0x70 0x68          DC8 70H, 68H, 5FH, 44H, 72H, 69H, 76H, 65H
   \              0x5F 0x44    
   \              0x72 0x69    
   \              0x76 0x65    
   \   00000050   0x72 0x5C          DC8 72H, 5CH, 73H, 72H, 63H, 5CH, 73H, 74H
   \              0x73 0x72    
   \              0x63 0x5C    
   \              0x73 0x74    
   \   00000058   0x6D 0x33          DC8 6DH, 33H, 32H, 66H, 34H, 78H, 78H, 5FH
   \              0x32 0x66    
   \              0x34 0x78    
   \              0x78 0x5F    
   \   00000060   0x64 0x62          DC8 64H, 62H, 67H, 6DH, 63H, 75H, 2EH, 63H
   \              0x67 0x6D    
   \              0x63 0x75    
   \              0x2E 0x63    
   \   00000068   0x00               DC8 0
   \   00000069   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    167          
    168          /**
    169            * @}
    170            */ 
    171          
    172          /**
    173            * @}
    174            */ 
    175          
    176          /**
    177            * @}
    178            */ 
    179          
    180          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   DBGMCU_APB1PeriphConfig
        16   -> assert_failed
      16   DBGMCU_APB2PeriphConfig
        16   -> assert_failed
      16   DBGMCU_Config
        16   -> assert_failed
       0   DBGMCU_GetDEVID
       0   DBGMCU_GetREVID


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
     108  ?_0
      64  DBGMCU_APB1PeriphConfig
      64  DBGMCU_APB2PeriphConfig
      64  DBGMCU_Config
      10  DBGMCU_GetDEVID
       8  DBGMCU_GetREVID

 
 342 bytes in section .text
 
 342 bytes of CODE memory

Errors: none
Warnings: none
