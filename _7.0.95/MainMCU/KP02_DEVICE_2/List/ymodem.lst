###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        12/Oct/2018  15:54:37
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\ymodem.c
#    Command line =  
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\ymodem.c -D IAR_ARM_CM4
#        -D USE_STDPERIPH_DRIVER -D STM32F40_41xxx -D HAVE_CONFIG_H -D
#        SD_SPI_MODE -D USE_FULL_ASSERT -D DEVICE_2 -D TFT -D STENDBUY_NOT_USE
#        -D SCREEN_NOT_ROTATE -D USE_ADS1292R -D DISPLAY_GPIO -D
#        BUFFERED_TRANSFER -D LCD_TRACE -lCN
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\KP02_DEVICE_2\List\ -o
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\KP02_DEVICE_2\Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4F -e --fpu=VFPv4_sp --dlib_config
#        "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\ -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\FatFs\ -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\FreeRTOS\Source\include\
#        -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\FreeRTOS\Source\portable\IAR\ARM_CM3\
#        -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\Libraries\CMSIS\CM4\CoreSupport\
#        -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\Libraries\CMSIS\CM4\DeviceSupport\STM32F4xx\
#        -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\Libraries\STM32F10x_Speex_Lib\include\speex\
#        -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\Libraries\STM32F10x_Speex_Lib\include\
#        -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\Libraries\STM32F10x_Speex_Lib\libspeex\
#        -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\Libraries\STM32F10x_Speex_Lib\STM32\include\speex\
#        -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\Libraries\STM32F10x_Speex_Lib\STM32\include\
#        -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\Libraries\STM32F10x_Speex_Lib\STM32\
#        -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\Libraries\STM32F10x_Speex_Lib\STM32\libspeex\
#        -I
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\Libraries\STM32F10x_Speex_Lib\STM32\libspeex\iar\
#        -I D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\Fonts\ -Om --ec++
#    List file    =  
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\KP02_DEVICE_2\List\ymodem.lst
#    Object file  =  
#        D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\KP02_DEVICE_2\Obj\ymodem.o
#
###############################################################################

D:\WORK\Firmware_LastRelease\_7.0.95\MainMCU\ymodem.c
      1          /**
      2            ******************************************************************************
      3            * @file    IAP/src/ymodem.c
      4            * @author  MCD Application Team
      5            * @version V3.2.0
      6            * @date    04/23/2010
      7            * @brief   This file provides all the software functions related to the ymodem
      8            *          protocol.
      9            ******************************************************************************
     10            * @copy
     11            *
     12            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     13            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     14            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     15            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     16            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     17            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     18            *
     19            * <h2><center>&copy; COPYRIGHT 2010 STMicroelectronics</center></h2>
     20            */
     21          
     22          /** @addtogroup IAP
     23            * @{
     24            */
     25          
     26          /* Includes ------------------------------------------------------------------*/
     27          #include "main.h"
     28          #include "common.h"
     29          #include "stm32f4xx_flash.h"
     30          #include "flash_if.h"
     31          
     32          /* Private typedef -----------------------------------------------------------*/
     33          /* Private define ------------------------------------------------------------*/
     34          /* Private macro -------------------------------------------------------------*/
     35          /* Private variables ---------------------------------------------------------*/
     36          uint8_t FileName[FILE_NAME_LENGTH];
     37          //uint8_t file_name[FILE_NAME_LENGTH];
     38          uint32_t FlashDestination = ApplicationAddress; /* Flash user program offset */
     39          //uint16_t PageSize = PAGE_SIZE;

   \                                 In section .bss, align 4
     40          uint32_t EraseCounter = 0x0;
   \                     EraseCounter:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     41          uint32_t NbrOfPage = 0;
   \                     NbrOfPage:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     42          FLASH_Status FLASHStatus = FLASH_COMPLETE;
     43          uint32_t RamSource;
     44          extern uint8_t tab_1024[1024];
     45          
     46          uint8_t packet_data[PACKET_1K_SIZE + PACKET_OVERHEAD];
   \                     packet_data:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000010   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000020   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000030   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000040   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000050   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000060   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000070   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000080   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000090   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000D0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000E0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000F0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000100   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000110   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000120   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000130   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000140   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000150   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000160   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000170   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000180   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000190   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001A0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001B0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001C0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001D0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001E0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001F0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000200   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000210   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000220   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000230   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000240   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000250   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000260   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000270   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000280   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000290   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002A0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002B0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002C0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002D0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002E0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002F0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000300   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000310   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000320   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000330   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000340   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000350   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000360   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000370   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000380   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000390   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003A0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003B0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003C0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003D0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003E0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003F0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000400   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \                     FileName:
   \   00000408   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000418   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000428   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000438   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000448   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000458   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000468   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000478   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000488   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000498   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004A8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004B8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004C8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004D8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004E8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004F8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     47          uint8_t file_size[FILE_SIZE_LENGTH];
   \                     file_size:
   \   00000508   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \                     FlashDestination:
   \   00000518   0x08020000         DC32 134348800
   \                     RamSource:
   \   0000051C   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    

   \                                 In section .data, align 1
   \                     FLASHStatus:
   \   00000000   0x09               DC8 9
     48          
     49          /* Private function prototypes -----------------------------------------------*/
     50          /* Private functions ---------------------------------------------------------*/
     51          
     52          /**
     53            * @brief  Receive byte from sender
     54            * @param  c: Character
     55            * @param  timeout: Timeout
     56            * @retval 0: Byte received
     57            *         -1: Timeout
     58            */

   \                                 In section .text, align 2, keep-with-next
     59          static  int32_t Receive_Byte (uint8_t *c, uint32_t timeout)
     60          {
   \                     _Z12Receive_BytePhj: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
     61            while (timeout-- > 0)
   \                     ??Receive_Byte_0: (+1)
   \   00000006   0x4628             MOV      R0,R5
   \   00000008   0x1E45             SUBS     R5,R0,#+1
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD006             BEQ.N    ??Receive_Byte_1
     62            {
     63              if (SerialKeyPressed(c) == 1)
   \   0000000E   0x4620             MOV      R0,R4
   \   00000010   0x.... 0x....      BL       SerialKeyPressed
   \   00000014   0x2801             CMP      R0,#+1
   \   00000016   0xD1F6             BNE.N    ??Receive_Byte_0
     64              {
     65                return 0;
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0xBD32             POP      {R1,R4,R5,PC}
     66              }
     67            }
     68            return -1;
   \                     ??Receive_Byte_1: (+1)
   \   0000001C   0xF04F 0x30FF      MOV      R0,#-1
   \   00000020   0xBD32             POP      {R1,R4,R5,PC}    ;; return
     69          }
     70          
     71          /**
     72            * @brief  Send a byte
     73            * @param  c: Character
     74            * @retval 0: Byte sent
     75            */

   \                                 In section .text, align 2, keep-with-next
     76          static uint32_t Send_Byte (uint8_t c)
     77          {
   \                     _Z9Send_Byteh: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     78            SerialPutChar(c);
   \   00000002   0x.... 0x....      BL       SerialPutChar
     79            return 0;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0xBD02             POP      {R1,PC}          ;; return
     80          }
     81          
     82          /**
     83            * @brief  Receive a packet from sender
     84            * @param  data
     85            * @param  length
     86            * @param  timeout
     87            *     0: end of transmission
     88            *    -1: abort by sender
     89            *    >0: packet length
     90            * @retval 0: normally return
     91            *        -1: timeout or packet error
     92            *         1: abort by user
     93            */

   \                                 In section .text, align 2, keep-with-next
     94          static int32_t Receive_Packet (uint8_t *data, int32_t *length, uint32_t timeout)
     95          {
   \                     _Z14Receive_PacketPhPij: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0xB082             SUB      SP,SP,#+8
   \   00000006   0x4604             MOV      R4,R0
   \   00000008   0x460D             MOV      R5,R1
   \   0000000A   0x4616             MOV      R6,R2
     96            uint16_t i, packet_size;
     97            uint8_t c;
     98            *length = 0;
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x6028             STR      R0,[R5, #+0]
     99            if (Receive_Byte(&c, timeout) != 0)
   \   00000010   0x4631             MOV      R1,R6
   \   00000012   0xA800             ADD      R0,SP,#+0
   \   00000014   0x.... 0x....      BL       _Z12Receive_BytePhj
   \   00000018   0x2800             CMP      R0,#+0
   \   0000001A   0xD002             BEQ.N    ??Receive_Packet_0
    100            {
    101              return -1;
   \   0000001C   0xF04F 0x30FF      MOV      R0,#-1
   \   00000020   0xE04B             B.N      ??Receive_Packet_1
    102            }
    103            switch (c)
   \                     ??Receive_Packet_0: (+1)
   \   00000022   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000026   0x2801             CMP      R0,#+1
   \   00000028   0xD00A             BEQ.N    ??Receive_Packet_2
   \   0000002A   0x2802             CMP      R0,#+2
   \   0000002C   0xD00D             BEQ.N    ??Receive_Packet_3
   \   0000002E   0x2804             CMP      R0,#+4
   \   00000030   0xD00E             BEQ.N    ??Receive_Packet_4
   \   00000032   0x2818             CMP      R0,#+24
   \   00000034   0xD00E             BEQ.N    ??Receive_Packet_5
   \   00000036   0x2841             CMP      R0,#+65
   \   00000038   0xD01E             BEQ.N    ??Receive_Packet_6
   \   0000003A   0x2861             CMP      R0,#+97
   \   0000003C   0xD01C             BEQ.N    ??Receive_Packet_6
   \   0000003E   0xE01D             B.N      ??Receive_Packet_7
    104            {
    105              case SOH:
    106                packet_size = PACKET_SIZE;
   \                     ??Receive_Packet_2: (+1)
   \   00000040   0x2780             MOVS     R7,#+128
    107                break;
    108              case STX:
    109                packet_size = PACKET_1K_SIZE;
    110                break;
    111              case EOT:
    112                return 0;
    113              case CA:
    114                if ((Receive_Byte(&c, timeout) == 0) && (c == CA))
    115                {
    116                  *length = -1;
    117                  return 0;
    118                }
    119                else
    120                {
    121                  return -1;
    122                }
    123              case ABORT1:
    124              case ABORT2:
    125                return 1;
    126              default:
    127                return -1;
    128            }
    129            *data = c;
   \                     ??Receive_Packet_8: (+1)
   \   00000042   0x7020             STRB     R0,[R4, #+0]
    130            for (i = 1; i < (packet_size + PACKET_OVERHEAD); i ++)
   \   00000044   0xF04F 0x0801      MOV      R8,#+1
   \   00000048   0xE01D             B.N      ??Receive_Packet_9
   \                     ??Receive_Packet_3: (+1)
   \   0000004A   0xF44F 0x6780      MOV      R7,#+1024
   \   0000004E   0xE7F8             B.N      ??Receive_Packet_8
   \                     ??Receive_Packet_4: (+1)
   \   00000050   0x2000             MOVS     R0,#+0
   \   00000052   0xE032             B.N      ??Receive_Packet_1
   \                     ??Receive_Packet_5: (+1)
   \   00000054   0x4631             MOV      R1,R6
   \   00000056   0xA800             ADD      R0,SP,#+0
   \   00000058   0x.... 0x....      BL       _Z12Receive_BytePhj
   \   0000005C   0x2800             CMP      R0,#+0
   \   0000005E   0xD108             BNE.N    ??Receive_Packet_10
   \   00000060   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000064   0x2818             CMP      R0,#+24
   \   00000066   0xD104             BNE.N    ??Receive_Packet_10
   \   00000068   0xF04F 0x30FF      MOV      R0,#-1
   \   0000006C   0x6028             STR      R0,[R5, #+0]
   \   0000006E   0x2000             MOVS     R0,#+0
   \   00000070   0xE023             B.N      ??Receive_Packet_1
   \                     ??Receive_Packet_10: (+1)
   \   00000072   0xF04F 0x30FF      MOV      R0,#-1
   \   00000076   0xE020             B.N      ??Receive_Packet_1
   \                     ??Receive_Packet_6: (+1)
   \   00000078   0x2001             MOVS     R0,#+1
   \   0000007A   0xE01E             B.N      ??Receive_Packet_1
   \                     ??Receive_Packet_7: (+1)
   \   0000007C   0xF04F 0x30FF      MOV      R0,#-1
   \   00000080   0xE01B             B.N      ??Receive_Packet_1
   \                     ??Receive_Packet_11: (+1)
   \   00000082   0xF108 0x0801      ADD      R8,R8,#+1
   \                     ??Receive_Packet_9: (+1)
   \   00000086   0xFA1F 0xF888      UXTH     R8,R8
   \   0000008A   0x4640             MOV      R0,R8
   \   0000008C   0x1D79             ADDS     R1,R7,#+5
   \   0000008E   0x4288             CMP      R0,R1
   \   00000090   0xDA08             BGE.N    ??Receive_Packet_12
    131            {
    132              if (Receive_Byte(data + i, timeout) != 0)
   \   00000092   0x4631             MOV      R1,R6
   \   00000094   0x1900             ADDS     R0,R0,R4
   \   00000096   0x.... 0x....      BL       _Z12Receive_BytePhj
   \   0000009A   0x2800             CMP      R0,#+0
   \   0000009C   0xD0F1             BEQ.N    ??Receive_Packet_11
    133              {
    134                return -1;
   \   0000009E   0xF04F 0x30FF      MOV      R0,#-1
   \   000000A2   0xE00A             B.N      ??Receive_Packet_1
    135              }
    136            }
    137            if (data[PACKET_SEQNO_INDEX] != ((data[PACKET_SEQNO_COMP_INDEX] ^ 0xff) & 0xff))
   \                     ??Receive_Packet_12: (+1)
   \   000000A4   0x7860             LDRB     R0,[R4, #+1]
   \   000000A6   0x78A1             LDRB     R1,[R4, #+2]
   \   000000A8   0xF081 0x01FF      EOR      R1,R1,#0xFF
   \   000000AC   0x4288             CMP      R0,R1
   \   000000AE   0xD002             BEQ.N    ??Receive_Packet_13
    138            {
    139              return -1;
   \   000000B0   0xF04F 0x30FF      MOV      R0,#-1
   \   000000B4   0xE001             B.N      ??Receive_Packet_1
    140            }
    141            *length = packet_size;
   \                     ??Receive_Packet_13: (+1)
   \   000000B6   0x602F             STR      R7,[R5, #+0]
    142            return 0;
   \   000000B8   0x2000             MOVS     R0,#+0
   \                     ??Receive_Packet_1: (+1)
   \   000000BA   0xE8BD 0x81F6      POP      {R1,R2,R4-R8,PC}  ;; return
    143          }
    144          
    145          /**
    146            * @brief  Receive a file using the ymodem protocol
    147            * @param  buf: Address of the first byte
    148            * @retval The size of the file
    149            */

   \                                 In section .text, align 2, keep-with-next
    150          int32_t Ymodem_Receive (uint8_t *buf)
    151          {
   \                     Ymodem_Receive: (+1)
   \   00000000   0xE92D 0x4FF1      PUSH     {R0,R4-R11,LR}
   \   00000004   0xB082             SUB      SP,SP,#+8
    152            uint8_t* file_ptr;
    153            uint8_t* buf_ptr;
    154            int i;
    155            int j;
    156            int packet_length;
    157            int session_done;
    158            int file_done;
    159            int packets_received;
    160            int errors;
    161            int session_begin;
    162            int size;
    163          
    164          	size = 0;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x9000             STR      R0,[SP, #+0]
    165            /* Initialize FlashDestination variable */
    166            FlashDestination = ApplicationAddress;
   \   0000000A   0x....             LDR.N    R4,??DataTable0
   \   0000000C   0xF504 0x65A3      ADD      R5,R4,#+1304
   \   00000010   0x....             LDR.N    R6,??DataTable0_1  ;; 0x8020000
   \   00000012   0x602E             STR      R6,[R5, #+0]
    167          
    168            for (session_done = 0, errors = 0, session_begin = 0; ;)
   \   00000014   0x4682             MOV      R10,R0
   \   00000016   0x4607             MOV      R7,R0
   \   00000018   0x4683             MOV      R11,R0
    169            {
    170              for (packets_received = 0, file_done = 0, buf_ptr = buf; ;)
   \                     ??Ymodem_Receive_0: (+1)
   \   0000001A   0xF04F 0x0800      MOV      R8,#+0
   \   0000001E   0x46C1             MOV      R9,R8
    171              {
    172                switch (Receive_Packet(packet_data, &packet_length, NAK_TIMEOUT))
   \                     ??Ymodem_Receive_1: (+1)
   \   00000020   0xF44F 0x1280      MOV      R2,#+1048576
   \   00000024   0xA901             ADD      R1,SP,#+4
   \   00000026   0x4620             MOV      R0,R4
   \   00000028   0x.... 0x....      BL       _Z14Receive_PacketPhPij
   \   0000002C   0x2800             CMP      R0,#+0
   \   0000002E   0xD003             BEQ.N    ??Ymodem_Receive_2
   \   00000030   0x2801             CMP      R0,#+1
   \   00000032   0xF000 0x809C      BEQ.W    ??Ymodem_Receive_3
   \   00000036   0xE0A3             B.N      ??Ymodem_Receive_4
    173                {
    174                  case 0:
    175                    errors = 0;
   \                     ??Ymodem_Receive_2: (+1)
   \   00000038   0x2700             MOVS     R7,#+0
    176                    switch (packet_length)
   \   0000003A   0x9801             LDR      R0,[SP, #+4]
   \   0000003C   0x2800             CMP      R0,#+0
   \   0000003E   0xD007             BEQ.N    ??Ymodem_Receive_5
   \   00000040   0xF1B0 0x3FFF      CMP      R0,#-1
   \   00000044   0xD10A             BNE.N    ??Ymodem_Receive_6
    177                    {
    178                      /* Abort by sender */
    179                      case - 1:
    180                        Send_Byte(ACK);
   \   00000046   0x2006             MOVS     R0,#+6
   \   00000048   0x.... 0x....      BL       _Z9Send_Byteh
    181                        return 0;
   \   0000004C   0x4638             MOV      R0,R7
   \   0000004E   0xE0B1             B.N      ??Ymodem_Receive_7
    182                      /* End of transmission */
    183                      case 0:
    184                        Send_Byte(ACK);
   \                     ??Ymodem_Receive_5: (+1)
   \   00000050   0x2006             MOVS     R0,#+6
   \   00000052   0x.... 0x....      BL       _Z9Send_Byteh
    185                        file_done = 1;
   \   00000056   0xF04F 0x0901      MOV      R9,#+1
    186                        break;
   \   0000005A   0xE0A2             B.N      ??Ymodem_Receive_8
    187                      /* Normal packet */
    188                      default:
    189                        if ((packet_data[PACKET_SEQNO_INDEX] & 0xff) != (packets_received & 0xff))
   \                     ??Ymodem_Receive_6: (+1)
   \   0000005C   0x1C60             ADDS     R0,R4,#+1
   \   0000005E   0x7801             LDRB     R1,[R0, #+0]
   \   00000060   0xFA5F 0xF288      UXTB     R2,R8
   \   00000064   0x4291             CMP      R1,R2
   \   00000066   0xD003             BEQ.N    ??Ymodem_Receive_9
    190                        {
    191                          Send_Byte(NAK);
   \   00000068   0x2015             MOVS     R0,#+21
   \   0000006A   0x.... 0x....      BL       _Z9Send_Byteh
   \   0000006E   0xE098             B.N      ??Ymodem_Receive_8
    192                        }
    193                        else
    194                        {
    195                          if (packets_received == 0)
   \                     ??Ymodem_Receive_9: (+1)
   \   00000070   0xF1B8 0x0F00      CMP      R8,#+0
   \   00000074   0xD149             BNE.N    ??Ymodem_Receive_10
    196                          {
    197                            /* Filename packet */
    198                            if (packet_data[PACKET_HEADER] != 0)
   \   00000076   0x7880             LDRB     R0,[R0, #+2]
   \   00000078   0x2800             CMP      R0,#+0
   \   0000007A   0xD03F             BEQ.N    ??Ymodem_Receive_11
    199                            {
    200                              /* Filename packet has valid data */
    201                              for (i = 0, file_ptr = packet_data + PACKET_HEADER; (*file_ptr != 0) && (i < FILE_NAME_LENGTH);)
   \   0000007C   0x4639             MOV      R1,R7
   \   0000007E   0x1CE0             ADDS     R0,R4,#+3
   \   00000080   0xE005             B.N      ??Ymodem_Receive_12
    202                              {
    203                                FileName[i++] = *file_ptr++;
   \                     ??Ymodem_Receive_13: (+1)
   \   00000082   0xF810 0x2B01      LDRB     R2,[R0], #+1
   \   00000086   0x190B             ADDS     R3,R1,R4
   \   00000088   0xF883 0x2408      STRB     R2,[R3, #+1032]
   \   0000008C   0x1C49             ADDS     R1,R1,#+1
    204                              }
   \                     ??Ymodem_Receive_12: (+1)
   \   0000008E   0x7802             LDRB     R2,[R0, #+0]
   \   00000090   0x2A00             CMP      R2,#+0
   \   00000092   0xD001             BEQ.N    ??Ymodem_Receive_14
   \   00000094   0x29FF             CMP      R1,#+255
   \   00000096   0xDDF4             BLE.N    ??Ymodem_Receive_13
    205                              FileName[i++] = '\0';
   \                     ??Ymodem_Receive_14: (+1)
   \   00000098   0x463A             MOV      R2,R7
   \   0000009A   0x1909             ADDS     R1,R1,R4
   \   0000009C   0xF881 0x2408      STRB     R2,[R1, #+1032]
    206                              for (i = 0, file_ptr ++; (*file_ptr != ' ') && (i < FILE_SIZE_LENGTH);)
   \   000000A0   0x4611             MOV      R1,R2
   \   000000A2   0x1C40             ADDS     R0,R0,#+1
   \   000000A4   0xE005             B.N      ??Ymodem_Receive_15
    207                              {
    208                                file_size[i++] = *file_ptr++;
   \                     ??Ymodem_Receive_16: (+1)
   \   000000A6   0xF810 0x2B01      LDRB     R2,[R0], #+1
   \   000000AA   0x190B             ADDS     R3,R1,R4
   \   000000AC   0xF883 0x2508      STRB     R2,[R3, #+1288]
   \   000000B0   0x1C49             ADDS     R1,R1,#+1
    209                              }
   \                     ??Ymodem_Receive_15: (+1)
   \   000000B2   0x7802             LDRB     R2,[R0, #+0]
   \   000000B4   0x2A20             CMP      R2,#+32
   \   000000B6   0xD001             BEQ.N    ??Ymodem_Receive_17
   \   000000B8   0x2910             CMP      R1,#+16
   \   000000BA   0xDBF4             BLT.N    ??Ymodem_Receive_16
    210                              file_size[i++] = '\0';
   \                     ??Ymodem_Receive_17: (+1)
   \   000000BC   0x4638             MOV      R0,R7
   \   000000BE   0x1909             ADDS     R1,R1,R4
   \   000000C0   0xF881 0x0508      STRB     R0,[R1, #+1288]
    211                              Str2Int(file_size, &size);
   \   000000C4   0xA900             ADD      R1,SP,#+0
   \   000000C6   0xF504 0x60A1      ADD      R0,R4,#+1288
   \   000000CA   0x.... 0x....      BL       Str2Int
    212          
    213                              /* Test the size of the image to be sent */
    214                              /* Image size is greater than Flash size */
    215                              if (size > (FLASH_SIZE - 1))
   \   000000CE   0x9800             LDR      R0,[SP, #+0]
   \   000000D0   0xF5B0 0x2F60      CMP      R0,#+917504
   \   000000D4   0xDB08             BLT.N    ??Ymodem_Receive_18
    216                              {
    217                                /* End session */
    218                                Send_Byte(CA);
   \   000000D6   0x2018             MOVS     R0,#+24
   \   000000D8   0x.... 0x....      BL       _Z9Send_Byteh
    219                                Send_Byte(CA);
   \   000000DC   0x2018             MOVS     R0,#+24
   \   000000DE   0x.... 0x....      BL       _Z9Send_Byteh
    220                                return -1;
   \   000000E2   0xF04F 0x30FF      MOV      R0,#-1
   \   000000E6   0xE065             B.N      ??Ymodem_Receive_7
    221                              }
    222          
    223                              FLASH_If_Erase(APPLICATION_ADDRESS);
   \                     ??Ymodem_Receive_18: (+1)
   \   000000E8   0x4630             MOV      R0,R6
   \   000000EA   0x.... 0x....      BL       _Z14FLASH_If_Erasej
    224          //                    /* Erase the needed pages where the user application will be loaded */
    225          //                    /* Define the number of page to be erased */
    226          //                    NbrOfPage = FLASH_PagesMask(size);
    227          //
    228          //                    /* Erase the FLASH pages */
    229          //                    for (EraseCounter = 0; (EraseCounter < NbrOfPage) && (FLASHStatus == FLASH_COMPLETE); EraseCounter++)
    230          //                    {
    231          //                      FLASHStatus = FLASH_ErasePage(FlashDestination + (PageSize * EraseCounter));
    232          //                    }
    233                              Send_Byte(ACK);
   \   000000EE   0x2006             MOVS     R0,#+6
   \   000000F0   0x.... 0x....      BL       _Z9Send_Byteh
    234                              Send_Byte(CRC16);
   \   000000F4   0x2043             MOVS     R0,#+67
   \   000000F6   0x.... 0x....      BL       _Z9Send_Byteh
   \   000000FA   0xE033             B.N      ??Ymodem_Receive_19
    235                            }
    236                            /* Filename packet is empty, end session */
    237                            else
    238                            {
    239                              Send_Byte(ACK);
   \                     ??Ymodem_Receive_11: (+1)
   \   000000FC   0x2006             MOVS     R0,#+6
   \   000000FE   0x.... 0x....      BL       _Z9Send_Byteh
    240                              file_done = 1;
   \   00000102   0xF04F 0x0901      MOV      R9,#+1
    241                              session_done = 1;
   \   00000106   0x46CA             MOV      R10,R9
    242                              break;
   \   00000108   0xE04B             B.N      ??Ymodem_Receive_8
    243                            }
    244                          }
    245                          /* Data packet */
    246                          else
    247                          {
    248                            memcpy(buf_ptr, packet_data + PACKET_HEADER, packet_length);
   \                     ??Ymodem_Receive_10: (+1)
   \   0000010A   0x9A01             LDR      R2,[SP, #+4]
   \   0000010C   0x1CE1             ADDS     R1,R4,#+3
   \   0000010E   0x9802             LDR      R0,[SP, #+8]
   \   00000110   0x.... 0x....      BL       __aeabi_memcpy
    249                            RamSource = (uint32_t)buf;
   \   00000114   0x9802             LDR      R0,[SP, #+8]
   \   00000116   0x6068             STR      R0,[R5, #+4]
    250                            for (j = 0;(j < packet_length) && (FlashDestination <  ApplicationAddress + size);j += 4)
   \   00000118   0x46BB             MOV      R11,R7
   \   0000011A   0xE005             B.N      ??Ymodem_Receive_20
    251                            {
    252                              /* Program the data received into STM32F10x Flash */
    253                              FLASH_ProgramWord(FlashDestination, *(uint32_t*)RamSource);
    254          
    255                              if (*(uint32_t*)FlashDestination != *(uint32_t*)RamSource)
    256                              {
    257                                /* End session */
    258                                Send_Byte(CA);
    259                                Send_Byte(CA);
    260                                return -2;
    261                              }
    262                              FlashDestination += 4;
   \                     ??Ymodem_Receive_21: (+1)
   \   0000011C   0x1D00             ADDS     R0,R0,#+4
   \   0000011E   0x6028             STR      R0,[R5, #+0]
    263                              RamSource += 4;
   \   00000120   0x1D08             ADDS     R0,R1,#+4
   \   00000122   0x6068             STR      R0,[R5, #+4]
   \   00000124   0xF10B 0x0B04      ADD      R11,R11,#+4
   \                     ??Ymodem_Receive_20: (+1)
   \   00000128   0x9801             LDR      R0,[SP, #+4]
   \   0000012A   0x4583             CMP      R11,R0
   \   0000012C   0xDA17             BGE.N    ??Ymodem_Receive_22
   \   0000012E   0x6828             LDR      R0,[R5, #+0]
   \   00000130   0x9900             LDR      R1,[SP, #+0]
   \   00000132   0x1871             ADDS     R1,R6,R1
   \   00000134   0x4288             CMP      R0,R1
   \   00000136   0xD212             BCS.N    ??Ymodem_Receive_22
   \   00000138   0x6869             LDR      R1,[R5, #+4]
   \   0000013A   0x6809             LDR      R1,[R1, #+0]
   \   0000013C   0x.... 0x....      BL       FLASH_ProgramWord
   \   00000140   0x6869             LDR      R1,[R5, #+4]
   \   00000142   0x6828             LDR      R0,[R5, #+0]
   \   00000144   0x6802             LDR      R2,[R0, #+0]
   \   00000146   0x680B             LDR      R3,[R1, #+0]
   \   00000148   0x429A             CMP      R2,R3
   \   0000014A   0xD0E7             BEQ.N    ??Ymodem_Receive_21
   \   0000014C   0x2018             MOVS     R0,#+24
   \   0000014E   0x.... 0x....      BL       _Z9Send_Byteh
   \   00000152   0x2018             MOVS     R0,#+24
   \   00000154   0x.... 0x....      BL       _Z9Send_Byteh
   \   00000158   0xF06F 0x0001      MVN      R0,#+1
   \   0000015C   0xE02A             B.N      ??Ymodem_Receive_7
    264                            }
    265                            Send_Byte(ACK);
   \                     ??Ymodem_Receive_22: (+1)
   \   0000015E   0x2006             MOVS     R0,#+6
   \   00000160   0x.... 0x....      BL       _Z9Send_Byteh
    266                          }
    267                          packets_received ++;
   \                     ??Ymodem_Receive_19: (+1)
   \   00000164   0xF108 0x0801      ADD      R8,R8,#+1
    268                          session_begin = 1;
   \   00000168   0xF04F 0x0B01      MOV      R11,#+1
   \   0000016C   0xE019             B.N      ??Ymodem_Receive_8
    269                        }
    270                    }
    271                    break;
    272                  case 1:
    273                    Send_Byte(CA);
   \                     ??Ymodem_Receive_3: (+1)
   \   0000016E   0x2018             MOVS     R0,#+24
   \   00000170   0x.... 0x....      BL       _Z9Send_Byteh
    274                    Send_Byte(CA);
   \   00000174   0x2018             MOVS     R0,#+24
   \   00000176   0x.... 0x....      BL       _Z9Send_Byteh
    275                    return -3;
   \   0000017A   0xF06F 0x0002      MVN      R0,#+2
   \   0000017E   0xE019             B.N      ??Ymodem_Receive_7
    276                  default:
    277                    if (session_begin > 0)
   \                     ??Ymodem_Receive_4: (+1)
   \   00000180   0xF1BB 0x0F01      CMP      R11,#+1
   \   00000184   0xDB00             BLT.N    ??Ymodem_Receive_23
    278                    {
    279                      errors ++;
   \   00000186   0x1C7F             ADDS     R7,R7,#+1
    280                    }
    281                    if (errors > MAX_ERRORS)
   \                     ??Ymodem_Receive_23: (+1)
   \   00000188   0x2F06             CMP      R7,#+6
   \   0000018A   0xDB07             BLT.N    ??Ymodem_Receive_24
    282                    {
    283                      Send_Byte(CA);
   \   0000018C   0x2018             MOVS     R0,#+24
   \   0000018E   0x.... 0x....      BL       _Z9Send_Byteh
    284                      Send_Byte(CA);
   \   00000192   0x2018             MOVS     R0,#+24
   \   00000194   0x.... 0x....      BL       _Z9Send_Byteh
    285                      return 0;
   \   00000198   0x2000             MOVS     R0,#+0
   \   0000019A   0xE00B             B.N      ??Ymodem_Receive_7
    286                    }
    287                    Send_Byte(CRC16);
   \                     ??Ymodem_Receive_24: (+1)
   \   0000019C   0x2043             MOVS     R0,#+67
   \   0000019E   0x.... 0x....      BL       _Z9Send_Byteh
    288                    break;
    289                }
    290                if (file_done != 0)
   \                     ??Ymodem_Receive_8: (+1)
   \   000001A2   0xF1B9 0x0F00      CMP      R9,#+0
   \   000001A6   0xF43F 0xAF3B      BEQ.W    ??Ymodem_Receive_1
    291                {
    292                  break;
    293                }
    294              }
    295              if (session_done != 0)
   \   000001AA   0xF1BA 0x0F00      CMP      R10,#+0
   \   000001AE   0xF43F 0xAF34      BEQ.W    ??Ymodem_Receive_0
    296              {
    297                break;
    298              }
    299            }
    300            return (int32_t)size;
   \   000001B2   0x9800             LDR      R0,[SP, #+0]
   \                     ??Ymodem_Receive_7: (+1)
   \   000001B4   0xE8BD 0x8FFE      POP      {R1-R11,PC}      ;; return
    301          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     packet_data

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x08020000         DC32     0x8020000
    302          /**
    303            * @}
    304            */
    305          
    306          /*******************(C)COPYRIGHT 2010 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   Receive_Byte(uint8_t *, uint32_t)
        16   -> SerialKeyPressed
      32   Receive_Packet(uint8_t *, int32_t *, uint32_t)
        32   -> Receive_Byte(uint8_t *, uint32_t)
       8   Send_Byte(uint8_t)
         8   -> SerialPutChar
      48   Ymodem_Receive
        48   -> FLASH_If_Erase(uint32_t)
        48   -> FLASH_ProgramWord
        48   -> Receive_Packet(uint8_t *, int32_t *, uint32_t)
        48   -> Send_Byte(uint8_t)
        48   -> Str2Int
        48   -> __aeabi_memcpy


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable0_1
       4  EraseCounter
       1  FLASHStatus
       4  NbrOfPage
      34  Receive_Byte(uint8_t *, uint32_t)
     190  Receive_Packet(uint8_t *, int32_t *, uint32_t)
      10  Send_Byte(uint8_t)
     440  Ymodem_Receive
    1312  packet_data
          FileName
          file_size
          FlashDestination
          RamSource

 
     8 bytes in section .bss
 1 313 bytes in section .data
   682 bytes in section .text
 
   682 bytes of CODE memory
 1 321 bytes of DATA memory

Errors: none
Warnings: none
